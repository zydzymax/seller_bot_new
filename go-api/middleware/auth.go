package middleware

import (
    "net/http"
    "os"
    "strings"
)

// AuthMiddleware –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization
func AuthMiddleware(next http.Handler) http.Handler {
    return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
        authHeader := r.Header.Get("Authorization")
        if authHeader == "" || !strings.HasPrefix(authHeader, "Bearer ") {
            http.Error(w, "üö´ –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", 
http.StatusUnauthorized)
            return
        }

        token := strings.TrimPrefix(authHeader, "Bearer ")
        expected := os.Getenv("API_KEY")

        if token != expected || expected == "" {
            http.Error(w, "üö´ –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω", http.StatusForbidden)
            return
        }

        // –í—Å—ë —Ö–æ—Ä–æ—à–æ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∞–ª—å—à–µ
        next.ServeHTTP(w, r)
    })
}

